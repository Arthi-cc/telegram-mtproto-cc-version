//@flow
/* eslint-disable max-len */

export const authKey = [
  57, 5, 27, 106, 126, 248, 172, 240, 84, 152, 131, 113, 242, 219, 183, 123, 153, 219, 132, 193, 159, 207, 232, 90,
  222, 107, 24, 254, 190, 162, 119, 74, 172, 56, 156, 245, 50, 163, 1, 62, 192, 209, 111, 255, 123, 25, 249, 59, 181,
  131, 82, 33, 251, 55, 250, 71, 108, 5, 31, 155, 197, 98, 234, 136, 4, 60, 178, 1, 174, 123, 200, 10, 227, 46, 252,
  97, 97, 56, 187, 34, 119, 234, 160, 151, 75, 155, 126, 26, 117, 172, 144, 206, 18, 241, 127, 47, 12, 230, 225, 141,
  59, 134, 92, 115, 126, 56, 51, 97, 65, 162, 193, 56, 66, 137, 4, 56, 28, 47, 109, 178, 138, 213, 104, 250, 198,
  191, 43, 198, 114, 34, 247, 241, 125, 152, 21, 252, 203, 124, 18, 23, 48, 103, 166, 47, 243, 90, 64, 232, 185, 24,
  86, 250, 95, 53, 222, 115, 12, 155, 185, 29, 107, 246, 10, 242, 134, 176, 20, 150, 100, 90, 122, 232, 194, 89, 63,
  214, 54, 92, 96, 94, 251, 50, 225, 248, 144, 66, 233, 22|2, 103, 160, 248, 237, 7, 98, 70, 28, 240, 244, 175, 89,
  165, 108, 223, 181, 164, 206, 121, 249, 172, 255, 228, 75, 124, 138, 44, 14, 54, 99, 195, 38, 139, 2, 237, 52, 33,
  98, 7, 50, 185, 142, 44, 115, 134, 97, 211, 141, 65, 116, 141, 250, 63, 0, 72, 76, 102, 19, 124, 20, 119, 101, 108,
  244, 121, 19, 207, 113
]

export const storage = { 'nearest_dc'     : 2, 'dc'             : 2,
                         'dc2_auth_key'   : '39051b6a7ef8acf054988371f2dbb77b99db84c19fcfe85ade6b18febea2774aac389cf532a3013ec0d16fff7b19f93bb5835221fb37fa476c051f9bc562ea88043cb201ae7bc80ae32efc616138bb2277eaa0974b9b7e1a75ac90ce12f17f2f0ce6e18d3b865c737e38336141a2c138428904381c2f6db28ad568fac6bf2bc67222f7f17d9815fccb7c12173067a62ff35a40e8b91856fa5f35de730c9bb91d6bf60af286b01496645a7ae8c2593fd6365c605efb32e1f89042e9de67a0f8ed0762461cf0f4af59a56cdfb5a4ce79f9acffe44b7c8a2c0e3663c3268b02ed3421620732b98e2c738661d38d41748dfa3f00484c66137c1477656cf47913cf71',
                         'dc2_server_salt': '3458f62f995e79e8'
}

export const threadState = new Map([
  [
    '6450609986432292820',
    { 'acked'            : false, 'container'        : false, 'notContentRelated': false, 'createNetworker'  : false, 'longPoll'         : false, 'type'             : 'api', 'uid'              : '040ae59f-bf8d-472f-a5ef-7e9f2c45a0e6', 'msg_id'           : '6450609986432292820', 'seq_no'           : 1, 'isAPI'            : true, 'requestID'        : 'bb6465cf-cff1-45ec-9158-d26d48542540', 'dc'               : 2, 'resultType'       : 'auth.SentCode'
    }
  ],
  [
    '6450609986465839372',
    { 'acked'            : false, 'container'        : true, 'notContentRelated': false, 'createNetworker'  : false, 'longPoll'         : false, 'type'             : 'container', 'uid'              : '040ae59f-bf8d-472f-a5ef-7e9f2c45a0e6', 'msg_id'           : '6450609986465839372', 'seq_no'           : 4, 'inner'            : [ '6450609986432292820', '6450609986444753988' ], 'innerAPI'         : [ 'bb6465cf-cff1-45ec-9158-d26d48542540', false ], 'dc'               : 2
    }
  ]
])

export const parserOpts = {
  uid      : '040ae59f-bf8d-472f-a5ef-7e9f2c45a0e6',
  authKeyID: [ 72, 154, 7, 174, 115, 239, 125, 150
  ],
  authKeyUint8: new Uint8Array([ 57, 5, 27, 106, 126, 248, 172, 240, 84, 152, 131, 113, 242, 219, 183, 123, 153, 219, 132, 193, 159, 207, 232, 90, 222, 107, 24, 254, 190, 162, 119, 74, 172, 56, 156, 245, 50, 163, 1, 62, 192, 209, 111, 255, 123, 25, 249, 59, 181, 131, 82, 33, 251, 55, 250, 71, 108, 5, 31, 155, 197, 98, 234, 136, 4, 60, 178, 1, 174, 123, 200, 10, 227, 46, 252, 97, 97, 56, 187, 34, 119, 234, 160, 151, 75, 155, 126, 26, 117, 172, 144, 206, 18, 241, 127, 47, 12, 230, 225, 141, 59, 134, 92, 115, 126, 56, 51, 97, 65, 162, 193, 56, 66, 137, 4, 56, 28, 47, 109, 178, 138, 213, 104, 250, 198, 191, 43, 198, 114, 34, 247, 241, 125, 152, 21, 252, 203, 124, 18, 23, 48, 103, 166, 47, 243, 90, 64, 232, 185, 24, 86, 250, 95, 53, 222, 115, 12, 155, 185, 29, 107, 246, 10, 242, 134, 176, 20, 150, 100, 90, 122, 232, 194, 89, 63, 214, 54, 92, 96, 94, 251, 50, 225, 248, 144, 66, 233, 222, 103, 160, 248, 237, 7, 98, 70, 28, 240, 244, 175, 89, 165, 108, 223, 181, 164, 206, 121, 249, 172, 255, 228, 75, 124, 138, 44, 14, 54, 99, 195, 38, 139, 2, 237, 52, 33, 98, 7, 50, 185, 142, 44, 115, 134, 97, 211, 141, 65, 116, 141, 250, 63, 0, 72, 76, 102, 19, 124, 20, 119, 101, 108, 244, 121, 19, 207, 113
  ]),
  thisSessionID: [ 89, 35, 220, 168, 231, 136, 44, 110
  ],
  prevSessionID : undefined,
  responseBuffer: Buffer.from([ 72, 154, 7, 174, 115, 239, 125, 150, 53, 176, 84, 145, 143, 14, 143, 117, 255, 141, 198, 105, 84, 119, 123, 0, 225, 66, 41, 129, 114, 28, 28, 30, 32, 40, 251, 178, 131, 252, 182, 3, 49, 218, 227, 20, 165, 81, 227, 71, 116, 86, 141, 93, 180, 9, 205, 170, 238, 44, 112, 127, 231, 233, 43, 190, 140, 220, 233, 67, 207, 106, 56, 10, 177, 52, 137, 85, 216, 147, 84, 43, 188, 216, 101, 151, 6, 116, 134, 108, 255, 204, 58, 210, 133, 75, 183, 19, 205, 116, 151, 197, 211, 42, 210, 204, 210, 201, 21, 177, 255, 218, 102, 114, 0, 106, 154, 41, 119, 127, 173, 173, 214, 242, 144, 6, 160, 60, 184, 143, 204, 63, 233, 7, 55, 232, 62, 180, 29, 96, 20, 195, 185, 219, 211, 66, 168, 83, 40, 236, 201, 63, 80, 80, 67, 141, 255, 20, 42, 49, 107, 145, 144, 106, 11, 104, 95, 211, 211, 115, 147, 250, 36, 47, 42, 102, 244, 251, 215, 205, 116, 142, 17, 39, 223, 79
  ]),
  getMsgById: ({ req_msg_id }: { req_msg_id: string }) => threadState.get(req_msg_id)
}
