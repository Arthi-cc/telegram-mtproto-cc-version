{"version":3,"sources":["../src/storage-adapter.js"],"names":["Maybe","fromNullable","Just","Nothing","StorageAdapter","constructor","storage","getAuthKey","dc","data","get","String","chain","validateArray","getSalt","getAuthID","getNearestDC","validateNumber","getDC","setAuthKey","set","setSalt","setAuthID","setNearestDC","setDC","removeAuthKey","remove","removeSalt","removeAuthID","removeNearestDC","removeDC","Array","isArray","every","n","isFinite","num","parseInt"],"mappings":"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","file":"storage-adapter.js","sourcesContent":["//@flow\n\nimport { type AsyncStorage } from 'mtproto-shared'\n// import { fromNullable, Maybe, Just, Nothing } from 'folktale/maybe'\n\nimport { Maybe } from 'apropos'\nconst { fromNullable, Just, Nothing } = Maybe\n\nexport default class StorageAdapter {\n  storage: AsyncStorage\n  constructor(storage: AsyncStorage) {\n    this.storage = storage\n  }\n  async getAuthKey(dc: number): Promise<Maybe<number[]>> {\n    const data = await this.storage.get(`dc${String(dc)}_auth_key`)\n    return fromNullable(data)\n      .chain(validateArray)\n  }\n  async getSalt(dc: number): Promise<Maybe<number[]>> {\n    const data = await this.storage.get(`dc${String(dc)}_server_salt`)\n    return fromNullable(data)\n      .chain(validateArray)\n  }\n  async getAuthID(dc: number): Promise<Maybe<number[]>> {\n    const data = await this.storage.get(`dc${String(dc)}_auth_id`)\n    return fromNullable(data)\n      .chain(validateArray)\n  }\n  async getNearestDC(): Promise<Maybe<number>> {\n    const data = await this.storage.get(`nearest_dc`)\n    return fromNullable(data)\n      .chain(validateNumber)\n  }\n  async getDC(): Promise<Maybe<number>> {\n    const data = await this.storage.get(`dc`)\n    return fromNullable(data)\n      .chain(validateNumber)\n  }\n\n  async setAuthKey(dc: number, data: number[]): Promise<void> {\n    await this.storage.set(`dc${String(dc)}_auth_key`, data)\n  }\n  async setSalt(dc: number, data: number[]): Promise<void> {\n    await this.storage.set(`dc${String(dc)}_server_salt`, data)\n  }\n  async setAuthID(dc: number, data: number[]): Promise<void> {\n    await this.storage.set(`dc${String(dc)}_auth_id`, data)\n  }\n  async setNearestDC(dc: number): Promise<void> {\n    await this.storage.set(`nearest_dc`, dc)\n  }\n  async setDC(dc: number): Promise<void> {\n    await this.storage.set(`dc`, dc)\n  }\n\n  async removeAuthKey(dc: number): Promise<void> {\n    await this.storage.remove(`dc${String(dc)}_auth_key`)\n  }\n  async removeSalt(dc: number): Promise<void> {\n    await this.storage.remove(`dc${String(dc)}_server_salt`)\n  }\n  async removeAuthID(dc: number): Promise<void> {\n    await this.storage.remove(`dc${String(dc)}_auth_id`)\n  }\n  async removeNearestDC(): Promise<void> {\n    await this.storage.remove(`nearest_dc`)\n  }\n  async removeDC(): Promise<void> {\n    await this.storage.remove(`dc`)\n  }\n}\n\nfunction validateArray(data): Maybe<number[]> {\n  if (Array.isArray(data)) {\n    if (data.every(n => typeof n === 'number')) {\n      return Just(data)\n    }\n  }\n  return Nothing()\n}\n\nfunction validateNumber(data): Maybe<number> {\n  if (typeof data === 'number') return Just(data)\n  if (typeof data === 'string') {\n    if (isFinite(data)) {\n      const num = parseInt(data, 10)\n      if (num > 0)\n        return Just(num)\n    }\n  }\n  return Nothing()\n}\n"]}