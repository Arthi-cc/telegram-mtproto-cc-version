{"version":3,"sources":["../../src/co-worker/index.js"],"names":["Webworker","CryptoBin","cryptoCommon","getCrypto","cryptoWorker","useWorker","use","webworker","webWorker","of","factorize","args","run","modPow","err","Crypto"],"mappings":"AAEA,OAAOA,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAGA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAMC,eAAeH,WAArB;AACA,MAAII,YAAYH,aAAaI,GAAb,CAAiBC,SAAjC;AACA,MAAIF,SAAJ,EAAe;AACb,QAAI;AACF,UAAMG,YAAYR,UAAUS,EAAV,EAAlB;;;AAOAL,mBAAaM,SAAb,GALGC,IAAD,IAAUH,UAAUI,GAAV,CAAc,WAAd,EAA2BD,IAA3B,CAKZ;AACAP,mBAAaS,MAAb,GAHGF,IAAD,IAAUH,UAAUI,GAAV,CAAc,SAAd,EAAyBD,IAAzB,CAGZ;AACD,KAVD,CAUE,OAAOG,GAAP,EAAY;AACZT,kBAAY,KAAZ;AACD;AACF;AACDH,eAAaI,GAAb,CAAiBC,SAAjB,GAA6BF,SAA7B;;AAEA,2BACKH,YADL;AAEEa,YAAQX;AAFV;AAID","file":"index.js","sourcesContent":["//@flow\n\nimport Webworker from './web-worker'\nimport CryptoBin from './crypto-bin'\nimport cryptoCommon from './common-provider'\nimport type { FactorizeFunc, ModPowFunc } from './index.h'\n\nexport default function getCrypto() {\n  const cryptoWorker = CryptoBin()\n  let useWorker = cryptoCommon.use.webworker\n  if (useWorker) {\n    try {\n      const webWorker = Webworker.of()\n      const factorize: FactorizeFunc =\n        (args) => webWorker.run('factorize', args)\n\n      const modPow: ModPowFunc =\n        (args) => webWorker.run('mod-pow', args)\n\n      cryptoWorker.factorize = factorize\n      cryptoWorker.modPow = modPow\n    } catch (err) {\n      useWorker = false\n    }\n  }\n  cryptoCommon.use.webworker = useWorker\n\n  return {\n    ...cryptoCommon,\n    Crypto: cryptoWorker,\n  }\n}\n"]}