{"version":3,"sources":["../../src/co-worker/common-provider.js"],"names":["isNode","testWebCrypto","webCrypto","window","crypto","subtle","webkitSubtle","msCrypto","cryptoCommon","useWebCrypto","use","sha1Crypto","sha256Crypto","webworker"],"mappings":"AACA,SAASA,MAAT;;AAWA,SAASC,aAAT,GAA+C;AAC7C,MAAIC,kBAAJ;;AAEA,MAAI;AACF;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,UAAIA,OAAOC,MAAX,EAAmB;AACjBF,oBACEC,OAAOC,MAAP,CAAcC,MAAd,IACGF,OAAOC,MAAP,CAAcE,YAFnB;AAGD,OAJD,MAIO,IAAIH,OAAOI,QAAX,EAAqB;AAC1BL,oBAAYC,OAAOI,QAAP,CAAgBF,MAA5B;AACD;AACF;AACF,GAXD,SAWU;AACR,WAAOH,SAAP;AACD;AACF;;AAED,IAAMM,eAAe,CAAC,MAAM;AAC1B,MAAMN,YAAYD,eAAlB;AACA,MAAMQ,eAAe,CAAC,CAACP,SAAvB;;AAGA,SAAO;AACLA,aADK;AAELQ,SAAK;AACHR,iBAAWO,YADR;AAEHE,kBANeF,YAIZ;AAGHG,oBANiBH,YAGd;AAIHI,iBAAW,CAACb;AAJT;AAFA,GAAP;AASD,CAdoB,GAArB;;AAgBA,eAAeQ,YAAf","file":"common-provider.js","sourcesContent":["//@flow\nimport { isNode } from 'Runtime'\n\ntype WebCryptoType = {\n  digest(\n    conf: {\n      name: 'SHA-1' | 'SHA-256'\n    },\n    data: number[] | Uint8Array | ArrayBuffer\n  ): Promise<ArrayBuffer>\n}\n\nfunction testWebCrypto(): void | WebCryptoType {\n  let webCrypto\n\n  try {\n    /* eslint-disable */\n    if (typeof window !== 'undefined') {\n      if (window.crypto) {\n        webCrypto =\n          window.crypto.subtle\n          || window.crypto.webkitSubtle\n      } else if (window.msCrypto) {\n        webCrypto = window.msCrypto.subtle\n      }\n    }\n  } finally {\n    return webCrypto\n  }\n}\n\nconst cryptoCommon = (() => {\n  const webCrypto = testWebCrypto()\n  const useWebCrypto = !!webCrypto\n  const sha1Crypto = useWebCrypto\n  const sha256Crypto = useWebCrypto\n  return {\n    webCrypto,\n    use: {\n      webCrypto: useWebCrypto,\n      sha1Crypto,\n      sha256Crypto,\n      webworker: !isNode,\n    }\n  }\n})()\n\nexport default cryptoCommon\n"]}