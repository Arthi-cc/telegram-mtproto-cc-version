{"version":3,"sources":["../../../src/state/action/networker-state.js"],"names":["networkerMeta","_","dc","id","NETWORKER_STATE","RESEND","ADD","DEL","SENT","PENDING"],"mappings":";;;;;;;AAGA;;AAmBA,IAAMA,gBAAgB,CAACC,CAAD,EAASC,EAAT,MAAyB,EAAED,GAAG,WAAL,EAAkBE,IAAID,EAAtB,EAAzB,CAAtB;;AApBA;AAsBO,IAAME,4CAAkC;AAC7CC,UAAQ;AACNC,SAAK,4BAAc,sBAAd,EAAsCN,aAAtC,CADC;AAENO,SAAK,4BAAc,yBAAd,EAAyCP,aAAzC;AAFC,GADqC;AAK7CQ,QAAM;AACJF,SAAK,4BAAc,oBAAd,EAAoCN,aAApC,CADD;AAEJO,SAAK,4BAAc,uBAAd,EAAuCP,aAAvC;AAFD,GALuC;AAS7CS,WAAS;AACPH,SAAK,4BAAc,uBAAd,EAAuCN,aAAvC,CADE;AAEPO,SAAK,4BAAc,0BAAd,EAA0CP,aAA1C;AAFE;AAToC,CAAxC","file":"networker-state.js","sourcesContent":["//@flow\n\n/*::import { NetMessage } from '../../service/networker/net-message'*/\nimport { doubleCreator, type ActionPair } from '../helpers'\n\ntype NetworkerMeta = number\n\ntype NetworkerState = {\n  RESEND: {\n    ADD: ActionPair<'networker/resend add', string[], NetworkerMeta>,\n    DEL: ActionPair<'networker/resend delete', string[], NetworkerMeta>,\n  },\n  SENT: {\n    ADD: ActionPair<'networker/sent add', NetMessage[], NetworkerMeta>,\n    DEL: ActionPair<'networker/sent delete', NetMessage[], NetworkerMeta>,\n  },\n  PENDING: {\n    ADD: ActionPair<'networker/pending add', string[], NetworkerMeta>,\n    DEL: ActionPair<'networker/pending delete', string[], NetworkerMeta>,\n  },\n}\n\nconst networkerMeta = (_: any, dc: number) => ({ _: 'networker', id: dc })\n\nexport const NETWORKER_STATE: NetworkerState = {\n  RESEND: {\n    ADD: doubleCreator('networker/resend add', networkerMeta),\n    DEL: doubleCreator('networker/resend delete', networkerMeta),\n  },\n  SENT: {\n    ADD: doubleCreator('networker/sent add', networkerMeta),\n    DEL: doubleCreator('networker/sent delete', networkerMeta),\n  },\n  PENDING: {\n    ADD: doubleCreator('networker/pending add', networkerMeta),\n    DEL: doubleCreator('networker/pending delete', networkerMeta),\n  },\n}\n"]}