{"version":3,"sources":["../../src/util/match-spec.js"],"names":["guard","viewPath","makeValidator","value","currentPath","e","selectCase","fieldPath","processSpec","processPair","key","spec"],"mappings":";;;;;kBAiCwBA,K;;AA9BxB;;AAEA,IAAMC,WAAW,8CAAjB;;AAEA,IAAMC,gBAAgB,CAACC,KAAD,EAAQC,WAAR,KAAkC,iBACtDH,SAASG,WAAT,CADsD,EAEtDC,KAAKA,MAAMF,KAF2C,CAAxD;;AAKA,IAAMG,aAAa,CAACH,KAAD,EAAQI,SAAR,KAAgC,OAAOJ,KAAP,KAAiB,QAAjB,GAC/CK,YAAYL,KAAZ,EAAmBI,SAAnB,CAD+C,GAE/CL,cAAcC,KAAd,EAAqBI,SAArB,CAFJ;;AAIA;AACA,IAAME,cAAeF,SAAD,IAAyB,CAAC,CAACG,GAAD,EAAMP,KAAN,CAAD,KAAkBG,WAC7DH,KAD6D,EAE7D,mBAAQO,GAAR,EAAaH,SAAb,CAF6D,CAA/D;;AAKA,IAAMC,cAAc,CAACG,IAAD,EAAeJ,SAAf,KAAuC,kBACzDE,YAAYF,SAAZ,CADyD,EAEzD,oBAAQI,IAAR,CAFyD,CAA3D;;AAKA;;;;;;AAMe,SAASX,KAAT,CAAeW,IAAf,EAAkD;AAC/D;AACA,SAAO,oBAAQH,YAAYG,IAAZ,EAAkB,EAAlB,CAAR,CAAP;AACD","file":"match-spec.js","sourcesContent":["//@flow\n\n\nimport { append, toPairs, chain, allPass, pipe, view, lensPath } from 'ramda'\n\nconst viewPath = pipe(lensPath, view)\n\nconst makeValidator = (value, currentPath: string[]) => pipe(\n  viewPath(currentPath),\n  e => e === value\n)\n\nconst selectCase = (value, fieldPath: string[]) => typeof value === 'object'\n  ? processSpec(value, fieldPath)\n  : makeValidator(value, fieldPath)\n\n//$off\nconst processPair = (fieldPath: string[]) => ([key, value]) => selectCase(\n  value,\n  append( key, fieldPath )\n)\n\nconst processSpec = (spec: Object, fieldPath: string[]) => chain(\n  processPair(fieldPath),\n  toPairs(spec)\n)\n\n/**\n * Validate object by given pattern\n *\n * @param {Object} spec\n * @returns {(x: any) => boolean}\n */\nexport default function guard(spec: Object): (x: any) => boolean {\n  //$off\n  return allPass(processSpec(spec, []))\n}\n"]}