{"version":3,"sources":["../../src/util/clean-stack.js"],"names":["extractPathRegex","pathRegex","stackFilter","x","pathMatches","match","test","stackCleaner","stack","replace","split","filter","trim","join"],"mappings":";;;;;AAEA,IAAMA,mBAAmB,yBAAzB;AACA,IAAMC,YACJ,8GADF;;AAGA,IAAMC,cAAeC,CAAD,IAAe;AACjC,MAAMC,cAAcD,EAAEE,KAAF,CAAQL,gBAAR,CAApB;AACA,MAAII,eAAe,IAAf,IAAuB,CAACA,YAAY,CAAZ,CAA5B,EACE,OAAO,IAAP;AACF,SAAO,CAACH,UAAUK,IAAV,CAAeF,YAAY,CAAZ,CAAf,CAAR;AACD,CALD;;AAOA,IAAMG,eACHC,KAAD,IACEA,MACGC,OADH,CACW,KADX,EACkB,GADlB,EAEGC,KAFH,CAES,IAFT,EAGGC,MAHH,CAGUT,WAHV,EAIGS,MAJH,CAIUR,KAAKA,EAAES,IAAF,OAAa,EAJ5B,EAKGC,IALH,CAKQ,IALR,CAFJ;;kBASeN,Y","file":"clean-stack.js","sourcesContent":["//@flow\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex =\n  /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/babel-polyfill\\/.*)?\\w+)\\.js:\\d+:\\d+)|native|<anonymous>)/\n\nconst stackFilter = (x: string) => {\n  const pathMatches = x.match(extractPathRegex)\n  if (pathMatches == null || !pathMatches[1])\n    return true\n  return !pathRegex.test(pathMatches[1])\n}\n\nconst stackCleaner =\n  (stack: string) =>\n    stack\n      .replace(/\\\\/g, '/')\n      .split('\\n')\n      .filter(stackFilter)\n      .filter(x => x.trim() !== '')\n      .join('\\n')\n\nexport default stackCleaner\n"]}