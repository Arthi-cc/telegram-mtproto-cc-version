{"version":3,"sources":["../../../src/service/chain/msg-key.js"],"names":["authKey","msgKey","isOut","x","sha1aText","Uint8Array","sha1bText","sha1cText","sha1dText","promises","set","subarray","push","sha1Hash","results","Promise","all","aesKey","aesIv","sha1a","sha1b","sha1c","sha1d","getMsgKeyIv"],"mappings":"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","file":"msg-key.js","sourcesContent":["//@flow\n\nimport CryptoWorker from '../../crypto'\n\nasync function getMsgKeyIv(authKey: Uint8Array, msgKey: Uint8Array, isOut: boolean): * {\n  const x = isOut\n    ? 0\n    : 8\n  const sha1aText = new Uint8Array(48)\n  const sha1bText = new Uint8Array(48)\n  const sha1cText = new Uint8Array(48)\n  const sha1dText = new Uint8Array(48)\n  const promises = []\n\n  sha1aText.set(msgKey, 0)\n  sha1aText.set(authKey.subarray(x, x + 32), 16)\n  promises.push(CryptoWorker.sha1Hash(sha1aText))\n\n  sha1bText.set(authKey.subarray(x + 32, x + 48), 0)\n  sha1bText.set(msgKey, 16)\n  sha1bText.set(authKey.subarray(x + 48, x + 64), 32)\n  promises.push(CryptoWorker.sha1Hash(sha1bText))\n\n  sha1cText.set(authKey.subarray(x + 64, x + 96), 0)\n  sha1cText.set(msgKey, 32)\n  promises.push(CryptoWorker.sha1Hash(sha1cText))\n\n  sha1dText.set(msgKey, 0)\n  sha1dText.set(authKey.subarray(x + 96, x + 128), 16)\n  promises.push(CryptoWorker.sha1Hash(sha1dText))\n\n  const results = await Promise.all(promises)\n  const aesKey = new Uint8Array(32),\n        aesIv = new Uint8Array(32),\n        sha1a = new Uint8Array(results[0]),\n        sha1b = new Uint8Array(results[1]),\n        sha1c = new Uint8Array(results[2]),\n        sha1d = new Uint8Array(results[3])\n\n  aesKey.set(sha1a.subarray(0, 8))\n  aesKey.set(sha1b.subarray(8, 20), 8)\n  aesKey.set(sha1c.subarray(4, 16), 20)\n\n  aesIv.set(sha1a.subarray(8, 20))\n  aesIv.set(sha1b.subarray(0, 8), 12)\n  aesIv.set(sha1c.subarray(16, 20), 20)\n  aesIv.set(sha1d.subarray(0, 8), 24)\n\n  const result: [Uint8Array, Uint8Array] = [aesKey, aesIv]\n  return result\n}\n\nexport default getMsgKeyIv\n"]}