{"version":3,"sources":["../../../src/service/authorizer/index.js"],"names":["Auth","log","uid","dc","savedReq","authRequest","get","runThread","getUrl","chain","url","authFuture","map","res","setter","storageAdapter","set","salt","serverSalt","authKey","authID","authKeyID","AUTH","RESOLVE","future","failureHandler","err","remove","modPowF","common","Crypto","modPow","modPowPartial","b","dhPrime","x","y","m","factorize","normalizeResPQ","serverNonce","server_nonce","pq","fingerprints","server_public_key_fingerprints","makePqBlock","ctx","it","publicKey","publicKeys","select","console","trace","dcMap","nonce","newNonce","assertResPQ","factorizePQInner","oneMoreNonce","mtpSendReqDh","authKeyFuture","data","mapRej","auth","Array","bytes","p","q","response","_","ERR","sendPQ","g","gA","gBytes","toString","modPowFuture","gB","prepareData","assertDhParams","both","authKeysGen","dhChoose","result","dataWithHash","tmpAesKey","tmpAesIv","encryptedData","request","mtproto","storeMethod","encrypted_data","writer","getBuffer","authKeyHash","key","aux","slice","id","keys","dhSwitch","dhGenOk","dhGenRetry","dhGenFail","Error","newNonceHash1","concat","new_nonce_hash1","dh","hash1","newNonceHash2","new_nonce_hash2","hash2","newNonceHash3","new_nonce_hash3","hash3","paramsFail","assertDhResponse","decryptServerDH","decryptServerDHPlain","makeAesKeys","aesKey","aesIv","encrypted_answer","encryptedAnswer","answerWithHash","hash","answerWithPadding","deserializer","assertDecryption","mtpVerifyDhParams","afterServerDhDecrypt","dh_prime","g_a","server_time","serverTime","localTime","retry","arr1","arr2","key1","key2","arr3","minSize","Math","ceil","leemonTwoPow","arr","fill","unshift","hex","join","innerLog","dhPrimeHex","verify","unknownDhPrime","dhPrimeLeemon","gALeemon","dhDec","case1","case2","case3","dhSubPow","case4","offset","getOffset","decrypt","sha1","checkDhGen","responseInvalid","mismatch","server","newNonceHash","new_nonce_hash","sendDH","fail","invalid"],"mappings":"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","file":"index.js","sourcesContent":["//@flow\n\nimport { cache, Fluture, encaseP, of, reject } from 'fluture'\n\nimport { DcUrlError } from '../../error'\nimport Config from 'ConfigProvider'\nimport { MAIN } from 'Action'\nimport { dispatch } from 'State'\nimport { Serialization, Deserialization } from '../../tl'\n\nimport random from '../secure-random'\nimport { applyServerTime, tsNow } from '../time-manager'\n\nimport { bytesCmp, bytesToHex, sha1BytesSync,\n  aesEncryptSync, aesDecryptSync, bytesToArrayBuffer,\n  bytesFromHex, bytesXor, generateNonce } from 'Bin'\nimport { bpe, str2bigInt, one,\n  dup, sub_, sub, greater } from '../../vendor/leemon'\nimport {\n  type DCNumber,\n  type UID,\n  toCryptoKey,\n  type CryptoKey,\n} from 'Newtype'\n\nimport {\n  type ResPQ,\n  type Server_DH_Params,\n  type Server_DH_inner_data,\n  type Set_client_DH_params_answer,\n} from './index.h'\n\nimport {\n  fetchDHInner,\n  fetchDhParam,\n  fetchResPQ,\n  fetchServerDh,\n  writeReqPQ,\n  writeReqDH,\n  writeInnerDH,\n} from './fetch-object'\nimport primeHex from './prime-hex'\nimport sendPlainReq from './send-plain-req'\n\nimport Logger from 'mtproto-logger'\n\nconst log = Logger`auth`\n\nexport default function Auth(uid: UID, dc: DCNumber) {\n  const savedReq = Config.authRequest.get(uid, dc)\n  if (savedReq) {\n    const req: typeof runThread = savedReq\n    return req\n  }\n\n  const runThread = getUrl(uid, dc)\n    .chain(url => authFuture(uid, dc, url))\n    .map(res => ({ ...res, uid }))\n    .chain(res => encaseP(async res => {\n      const setter = Config.storageAdapter.set\n      await setter.salt(uid, dc, res.serverSalt)\n      await setter.authKey(uid, dc, res.authKey)\n      await setter.authID(uid, dc, res.authKeyID)\n      return res\n    }, res))\n    .map(res => (dispatch(MAIN.AUTH.RESOLVE(res), uid), res))\n  const future = cache(runThread)\n  Config.authRequest.set(uid, dc, future)\n  return future\n}\n\nconst failureHandler = (uid: string, dc: number) => (err) => {\n  log`authChain, error`(err)\n  Config.authRequest.remove(uid, dc)\n  return err\n}\n\nconst modPowF = encaseP(Config.common.Crypto.modPow)\nconst modPowPartial = (b, dhPrime) => x => modPowF({ x, y: b, m: dhPrime })/*::.mapRej(cryptoErr)*/\n\nconst factorize = encaseP(Config.common.Crypto.factorize)\n\nconst normalizeResPQ = (res: ResPQ) => ({\n  serverNonce : res.server_nonce,\n  pq          : res.pq,\n  fingerprints: res.server_public_key_fingerprints,\n  ...res\n})\n\nconst makePqBlock = (uid: string) => (ctx) => {\n  const { serverNonce, fingerprints, pq, it } = ctx\n  log`PQ factorization done`(it)\n  log`Got ResPQ`(bytesToHex(serverNonce), bytesToHex(pq), fingerprints)\n\n  try {\n    const publicKey = Config.publicKeys.select(uid, fingerprints)\n    return of({ ...ctx, publicKey })\n  } catch (err) {\n    console.trace('select')\n    const error: Error = err\n    return reject(error)\n  }\n}\n\nfunction getUrl(uid: string, dc: DCNumber): Fluture<string, DcUrlError> {\n  const url = Config.dcMap(uid, dc)\n  if (typeof url !== 'string')\n    return reject(new DcUrlError(dc, url))\n  log`mtpAuth, dc, url`(dc, url)\n  return of(url)\n}\n\nfunction authFuture(uid: string, dc: DCNumber, url: string) {\n  const nonce = newNonce()\n\n  return of(writeReqPQ(uid, nonce))\n    .chain(sendPlainReq(uid, url))\n    .map(fetchResPQ)\n    .chain(assertResPQ(nonce))\n    .map(normalizeResPQ)\n    .chain(factorizePQInner)\n    .chain(makePqBlock(uid))\n    .map(oneMoreNonce)\n    .chain(mtpSendReqDh(uid, url))\n    .chain(authKeyFuture(uid, url))\n    .map(data => ({ ...data, dc }))\n    .mapRej(failureHandler(uid, dc))\n}\n\nfunction newNonce() {\n  const nonce = generateNonce()\n  log`Send req_pq`(bytesToHex(nonce))\n  return nonce\n}\n\nfunction oneMoreNonce(auth) {\n  const newNonce = random(new Array(32))\n  log`afterReqDH`('Send req_DH_params')\n  return { ...auth, newNonce }\n}\n\nconst factorizePQInner = ctx =>\n  factorize({ bytes: ctx.pq })\n    .map(([ p, q, it ]) => ({ ...ctx, p, q, it }))\n    /*::.mapRej(cryptoErr)*/\n\nconst assertResPQ = (nonce) => (response: ResPQ) => {\n  if (response._ !== 'resPQ') {\n    return reject(ERR.sendPQ.response(response._))/*::.mapRej(sendPqFail)*/\n  }\n  if (!bytesCmp(nonce, response.nonce)) {\n    return reject(ERR.sendPQ.nonce())/*::.mapRej(sendPqFail)*/\n  }\n\n  return of(response)/*::.mapRej(sendPqFail)*/\n}\n\nconst authKeyFuture = (uid, url) => (auth) => {\n  const {\n    g, gA,\n    nonce,\n    serverNonce,\n    dhPrime,\n  } = auth\n  const gBytes = bytesFromHex(g.toString(16))\n\n  const b = random(new Array(256))\n\n  const modPowFuture = modPowPartial(b, dhPrime)\n\n  return modPowFuture(gBytes)\n    .map(gB => writeInnerDH(uid, auth, gB))\n    .map(prepareData(uid, url, auth))\n    .chain(sendPlainReq(uid, url))\n    .map(fetchDhParam)\n    .chain(assertDhParams(nonce, serverNonce))\n    .both(modPowFuture(gA))\n    .map(authKeysGen)\n    .chain(dhChoose(uid, url, auth))\n    .map(result => ({ ...result, ...auth }))\n}\n\nconst prepareData = (uid, url, auth) => (dataWithHash) => {\n  const {\n    g,\n    serverNonce,\n    nonce,\n    tmpAesKey,\n    tmpAesIv,\n  } = auth\n\n  const encryptedData = aesEncryptSync(dataWithHash, tmpAesKey, tmpAesIv)\n\n  const request = new Serialization({ mtproto: true }, uid)\n\n  log`onGb`('Send set_client_DH_params')\n  request.storeMethod('set_client_DH_params', {\n    nonce,\n    server_nonce  : serverNonce,\n    encrypted_data: encryptedData\n  })\n\n\n  return request.writer.getBuffer()\n}\n\ntype AuthBlock = {\n  authKeyID: CryptoKey,\n  authKey: CryptoKey,\n  serverSalt: CryptoKey,\n}\n\nfunction authKeysGen([response, authKey]) {\n  const authKeyHash = sha1BytesSync(authKey)\n  log`Got Set_client_DH_params_answer`(response._)\n  return [response, {\n    key: authKey,\n    aux: authKeyHash.slice(0, 8),\n    id : authKeyHash.slice(-8),\n  }]\n}\n\ndeclare function joinChain<TA, /*::-*/FA, /*::-*/TB, FB>(future: Fluture<TA, FA> | Fluture<TB, FB>): Fluture<TA, FB>\n\nconst dhChoose = (uid: string, url: string, auth) => ([response, keys]) =>\n  /*::joinChain(*/dhSwitch(uid, url, auth, response, keys)/*::)*/\n\nfunction dhSwitch(uid: string, url: string, auth, response, keys) {\n  switch (response._) {\n    case 'dh_gen_ok': return /*::joinChain(*/dhGenOk(response, keys, auth)/*::)*/\n    case 'dh_gen_retry': return /*::joinChain(*/dhGenRetry(uid, url, response, keys, auth)/*::)*/\n    case 'dh_gen_fail': return /*::joinChain(*/dhGenFail(response, keys, auth)/*::)*/\n    default: return reject(new Error('Unknown case'))/*::.mapRej(dhAnswerFail)*/\n  }\n}\n\nfunction dhGenOk(response, { key, id, aux }, { newNonce, serverNonce }) {\n  const newNonceHash1 = sha1BytesSync(newNonce.concat([1], aux)).slice(-16)\n\n  if (!bytesCmp(newNonceHash1, response.new_nonce_hash1)) {\n    const err = reject(ERR.dh.nonce.hash1())/*::.mapRej(dhAnswerFail)*/\n    return err\n  }\n\n  const serverSalt = bytesXor(newNonce.slice(0, 8), serverNonce.slice(0, 8))\n  // console.log('Auth successfull!', authKeyID, authKey, serverSalt)\n  const authBlock = {\n    authKeyID : /*:: toCryptoKey(*/ id /*::)*/,\n    authKey   : /*:: toCryptoKey(*/ key /*::)*/,\n    //eslint-disable-next-line\n    serverSalt: /*:: toCryptoKey(*/ serverSalt /*::)*/,\n  }\n\n  const result: Fluture<AuthBlock, *> = of(authBlock)\n  return result\n}\n\nfunction dhGenRetry(uid, url, response, { aux }, auth) {\n  const { newNonce } = auth\n  const newNonceHash2 = sha1BytesSync(newNonce.concat([2], aux)).slice(-16)\n  if (!bytesCmp(newNonceHash2, response.new_nonce_hash2)) {\n    const err: Fluture<AuthBlock, *> = reject(ERR.dh.nonce.hash2())/*::.mapRej(dhAnswerFail)*/\n    return err\n  }\n\n  return authKeyFuture(uid, url)(auth)\n}\n\nfunction dhGenFail(response, { aux }, { newNonce }) {\n  const newNonceHash3 = sha1BytesSync(newNonce.concat([3], aux)).slice(-16)\n  if (!bytesCmp(newNonceHash3, response.new_nonce_hash3)) {\n    const err: Fluture<AuthBlock, *> = reject(ERR.dh.nonce.hash3())/*::.mapRej(dhAnswerFail)*/\n    return err\n  }\n  const result = reject(ERR.dh.paramsFail())/*::.mapRej(dhAnswerFail)*/\n  return result\n}\n\nconst mtpSendReqDh = (uid: string, url: string) =>  (auth) =>\n  of(writeReqDH(uid, auth))\n    .chain(sendPlainReq(uid, url))\n    .map(fetchServerDh)\n    .chain(assertDhResponse(auth))\n    .chain(decryptServerDH(uid, auth))\n\nconst decryptServerDH = (uid: string, auth) => ctx =>\n  decryptServerDHPlain(uid, makeAesKeys(auth), ctx)\n\nfunction makeAesKeys(auth) {\n  const { serverNonce, newNonce } = auth\n  const tmpAesKey = aesKey(serverNonce, newNonce)\n  const tmpAesIv = aesIv(serverNonce, newNonce)\n\n  return { ...auth, tmpAesKey, tmpAesIv }\n}\n\nfunction decryptServerDHPlain(uid: string, auth, response) {\n  const { encrypted_answer: encryptedAnswer } = response\n  const { serverNonce, nonce, tmpAesKey, tmpAesIv } = auth\n\n  const answerWithHash = aesDecryptSync(\n    encryptedAnswer,\n    tmpAesKey,\n    tmpAesIv)\n\n  const hash = answerWithHash.slice(0, 20)\n  const answerWithPadding = answerWithHash.slice(20)\n\n  const deserializer = new Deserialization(bytesToArrayBuffer(answerWithPadding), { mtproto: true }, uid)\n\n  return of(deserializer)\n    .map(fetchDHInner)\n    .chain(assertDecryption(nonce, serverNonce))\n    .chain(mtpVerifyDhParams(deserializer, hash, answerWithPadding))\n    .map(afterServerDhDecrypt(uid, auth))\n}\n\nconst afterServerDhDecrypt = (uid: string, auth) => (response) => {\n  log`DecryptServerDhDataAnswer`('Done decrypting answer')\n  const {\n    g,\n    dh_prime: dhPrime,\n    g_a: gA,\n    server_time: serverTime,\n  } = response\n  const localTime = tsNow()\n  applyServerTime(uid, serverTime, localTime)\n  return {\n    ...auth,\n    g, gA,\n    dhPrime,\n    retry: 0,\n  }\n}\n\n\nfunction aesKey(serverNonce, newNonce) {\n  const arr1 = [...newNonce, ...serverNonce]\n  const arr2 = [...serverNonce, ...newNonce]\n  const key1 = sha1BytesSync(arr1)\n  const key2 = sha1BytesSync(arr2).slice(0, 12)\n  return key1.concat(key2)\n}\n\nfunction aesIv(serverNonce, newNonce) {\n  const arr1 = [...serverNonce, ...newNonce]\n  const arr2 = [...newNonce, ...newNonce]\n  const arr3 = newNonce.slice(0, 4)\n  const key1 = sha1BytesSync(arr1)\n  const key2 = sha1BytesSync(arr2)\n  const res = key1.slice(12).concat(key2, arr3)\n  return res\n}\n\nconst minSize = Math.ceil(64 / bpe) + 1\n\nconst leemonTwoPow = (() => { //Dirty cheat to count 2^(2048 - 64)\n  const arr = Array(496)      //This number contains 496 zeroes in hex\n    .fill('0')\n  arr.unshift('1')\n  const hex = arr.join('')\n  const res = str2bigInt(hex, 16, minSize)\n  return res\n})()\n\nconst innerLog = log`VerifyDhParams`\n\nconst mtpVerifyDhParams = (deserializer, hash, answerWithPadding) => (\n  response: Server_DH_inner_data\n)/*:: : Fluture<Server_DH_inner_data, *> */ => {\n\n  const {\n    g,\n    dh_prime: dhPrime,\n    g_a: gA,\n  } = response\n  innerLog('begin')\n  const dhPrimeHex = bytesToHex(dhPrime)\n  if (g !== 3 || dhPrimeHex !== primeHex)\n    // The verified value is from https://core.telegram.org/mtproto/security_guidelines\n    return reject(ERR.verify.unknownDhPrime())/*::.mapRej(verifyFail)*/\n  innerLog('dhPrime cmp OK')\n\n  const dhPrimeLeemon = str2bigInt(dhPrimeHex, 16, minSize)\n  const gALeemon = str2bigInt(bytesToHex(gA), 16, minSize)\n  const dhDec = dup(dhPrimeLeemon)\n  sub_(dhDec, one)\n  const case1 = !greater(gALeemon, one)\n  const case2 = !greater(dhDec, gALeemon)\n  if (case1)\n    return reject(ERR.verify.case1())/*::.mapRej(verifyFail)*/\n\n  if (case2)\n    return reject(ERR.verify.case2())/*::.mapRej(verifyFail)*/\n  const case3 = !!greater(leemonTwoPow, gALeemon)\n  const dhSubPow = dup(dhPrimeLeemon)\n  sub(dhSubPow, leemonTwoPow)\n  const case4 = !greater(dhSubPow, gALeemon)\n  if (case3)\n    return reject(ERR.verify.case3())/*::.mapRej(verifyFail)*/\n  if (case4)\n    return reject(ERR.verify.case4())/*::.mapRej(verifyFail)*/\n  innerLog('2^{2048-64} < gA < dhPrime-2^{2048-64} OK')\n\n  const offset = deserializer.getOffset()\n  if (!bytesCmp(hash, sha1BytesSync(answerWithPadding.slice(0, offset))))\n    return reject(ERR.decrypt.sha1())/*::.mapRej(decryptFail)*/\n\n  return of(response)/*::.mapRej(verifyFail)*/\n}\n\nconst assertDecryption = (nonce, serverNonce) => (\n  response: Server_DH_inner_data\n)/*:: : Fluture<Server_DH_inner_data, *> */ => {\n  if (response._ !== 'server_DH_inner_data')\n    return reject(ERR.decrypt.response())/*::.mapRej(decryptFail)*/\n\n  if (!bytesCmp(nonce, response.nonce))\n    return reject(ERR.decrypt.nonce())/*::.mapRej(decryptFail)*/\n\n  if (!bytesCmp(serverNonce, response.server_nonce))\n    return reject(ERR.decrypt.serverNonce())/*::.mapRej(decryptFail)*/\n  return of(response)/*::.mapRej(decryptFail)*/\n}\n\nconst assertDhParams = (nonce, serverNonce) => (\n  response: Set_client_DH_params_answer\n)/*::: Fluture<Set_client_DH_params_answer, *> */=> {\n  if (checkDhGen(response._)) {\n    return reject(ERR.dh.responseInvalid(response._))/*::.mapRej(assertFail)*/\n  } else if (!bytesCmp(nonce, response.nonce)) {\n    return reject(ERR.dh.nonce.mismatch())/*::.mapRej(assertFail)*/\n  } else if (!bytesCmp(serverNonce, response.server_nonce)) {\n    return reject(ERR.dh.nonce.server())/*::.mapRej(assertFail)*/\n  }\n  return of(response)/*::.mapRej(assertFail)*/\n}\n\nfunction checkDhGen(_): boolean %checks {\n  return (\n    _ !== 'dh_gen_ok'\n    && _ !== 'dh_gen_retry'\n    && _ !== 'dh_gen_fail'\n  )\n}\n\nconst assertDhResponse = ({ nonce, serverNonce, newNonce }) => (\n  response: Server_DH_Params\n)/*:: : Fluture<*, *> */ => {\n  if (response._ === 'server_DH_params_fail') {\n    const newNonceHash = sha1BytesSync(newNonce).slice(-16)\n    if (!bytesCmp(newNonceHash, response.new_nonce_hash)) {\n      return reject(ERR.sendDH.hash())/*::.mapRej(assertFail)*/\n    }\n    return reject(ERR.sendDH.fail())/*::.mapRej(assertFail)*/\n  }\n  if (response._ !== 'server_DH_params_ok') {\n    return reject(ERR.sendDH.invalid(response._))/*::.mapRej(assertFail)*/\n  }\n\n  if (!bytesCmp(nonce, response.nonce)) {\n    return reject(ERR.sendDH.nonce())/*::.mapRej(assertFail)*/\n  }\n\n  if (!bytesCmp(serverNonce, response.server_nonce)) {\n    return reject(ERR.sendDH.serverNonce())/*::.mapRej(assertFail)*/\n  }\n  return of(response)/*::.mapRej(assertFail)*/\n}\n\n\ndeclare class CryptoError extends Error {  }\ndeclare function cryptoErr</*:: -*/F>(x: F): CryptoError\n\ndeclare class DHAnswerError extends Error {  }\ndeclare function dhAnswerFail</*:: -*/F>(x: F): DHAnswerError\n\ndeclare class AssertError extends Error {  }\ndeclare function assertFail</*:: -*/F>(x: F): AssertError\n\ndeclare class DecryptError extends Error {  }\ndeclare function decryptFail</*:: -*/F>(x: F): DecryptError\n\ndeclare class VerifyError extends Error {  }\ndeclare function verifyFail</*:: -*/F>(x: F): VerifyError\n\ndeclare class SendPqError extends Error {  }\ndeclare function sendPqFail</*:: -*/F>(x: F): SendPqError\n\n\nconst ERR = {\n  dh: {\n    paramsFail: () => new Error('[MT] Set_client_DH_params_answer fail'),\n    nonce     : {\n      mismatch: () => new Error('[MT] Set_client_DH_params_answer nonce mismatch'),\n      server  : () => new Error('[MT] Set_client_DH_params_answer server_nonce mismatch'),\n      hash1   : () => new Error('[MT] Set_client_DH_params_answer new_nonce_hash1 mismatch'),\n      hash2   : () => new Error('[MT] Set_client_DH_params_answer new_nonce_hash2 mismatch'),\n      hash3   : () => new Error('[MT] Set_client_DH_params_answer new_nonce_hash3 mismatch'),\n    },\n    responseInvalid: (_: string) => new Error(`[MT] Set_client_DH_params_answer response invalid: ${_}`)\n  },\n  verify: {\n    unknownDhPrime: () => new Error('[MT] DH params are not verified: unknown dhPrime'),\n    case1         : () => new Error('[MT] DH params are not verified: gA <= 1'),\n    case2         : () => new Error('[MT] DH params are not verified: gA >= dhPrime - 1'),\n    case3         : () => new Error('[MT] DH params are not verified: gA < 2^{2048-64}'),\n    case4         : () => new Error('[MT] DH params are not verified: gA > dhPrime - 2^{2048-64}'),\n  },\n  decrypt: {\n    response   : () => new Error(`[MT] server_DH_inner_data response invalid`),\n    nonce      : () => new Error('[MT] server_DH_inner_data nonce mismatch'),\n    serverNonce: () => new Error('[MT] server_DH_inner_data serverNonce mismatch'),\n    sha1       : () => new Error('[MT] server_DH_inner_data SHA1-hash mismatch'),\n  },\n  sendDH: {\n    invalid    : (_: string) => new Error(`[MT] Server_DH_Params response invalid: ${_}`),\n    nonce      : () => new Error('[MT] Server_DH_Params nonce mismatch'),\n    serverNonce: () => new Error('[MT] Server_DH_Params server_nonce mismatch'),\n    hash       : () => new Error('[MT] server_DH_params_fail new_nonce_hash mismatch'),\n    fail       : () => new Error('[MT] server_DH_params_fail'),\n  },\n  sendPQ: {\n    response: (_: string) => new Error(`[MT] resPQ response invalid: ${_}`),\n    nonce   : () => new Error('[MT] resPQ nonce mismatch'),\n  },\n}\n"]}