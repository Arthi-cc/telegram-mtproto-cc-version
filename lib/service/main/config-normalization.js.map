{"version":3,"sources":["../../../src/service/main/config-normalization.js"],"names":["api57","require","mtproto57","apiConfig","invokeWithLayer","layer","initConnection","api_id","device_model","system_version","app_version","lang_code","configNormalization","config","server","api","app","storage","publicKeys","plugins","schema","mtSchema","apiNormalized","invokeLayer","fullCfg"],"mappings":";;;;;;AAEA;;;;AAEA;;;;AACA;;;;AAIA;;;;;;AAEA,IAAMA,QAAkBC,QAAQ,6BAAR,CAAxB;AACA,IAAMC,YAAsBD,QAAQ,iCAAR,CAA5B;;AAEA,IAAME,YAAuB;AAC3BC,mBAAiB,UADU;AAE3BC,SAAiB,EAFU;AAG3BC,kBAAiB,UAHU;AAI3BC,UAAiB,KAJU;AAK3BC,gBAAiB,mBALU;AAM3BC,kBAAiB,kBANU;AAO3BC,eAAiB,OAPU;AAQ3BC,aAAiB;AARU,CAA7B;;AAWA,IAAMC,sBAAuBC,MAAD,IAAsC;AAChE,MAAM;AACJC,aAAS,EADL;AAEJC,UAAM,EAFF;AAGJC,SAAK;AACHC,gBAAU,6BADP;AAEHC,uCAFG;AAGHC,gBAAU;AAHP,QAID,EAPA;AAQJC,aAASpB,KARL;AASJqB,eAAWnB;AATP,MAUFW,MAVJ;AAWA,MAAMS,kCAAqBnB,SAArB,EAAmCY,GAAnC,CAAN;AACA,MAAMQ,cAAc,oCAAoBD,cAAcjB,KAAlC,CAApB;AACAiB,gBAAclB,eAAd,GAAgCmB,WAAhC;AACA,MAAMC,UAAU;AACdV,UADc;AAEdC,SAAKO,aAFS;AAGdN,SAAK,EAAEC,OAAF,EAAWC,UAAX,EAAuBC,OAAvB,EAHS;AAIdC,UAJc;AAKdC;AALc,GAAhB;AAOA,kCAAgBG,OAAhB;AACA,SAAOA,OAAP;AACD,CAxBD;;kBA0BeZ,mB","file":"config-normalization.js","sourcesContent":["//@flow\n\nimport MemoryStorage from '../../plugins/memory-storage'\n\nimport configValidator from './config-validation'\nimport generateInvokeLayer from './invoke-layer-generator'\n\nimport type { TLSchema } from '../../tl/index.h'\nimport type { ApiConfig, ConfigType, StrictConfig } from './index.h'\nimport publisKeys from './public-keys'\n\nconst api57: TLSchema = require('../../../schema/api-57.json')\nconst mtproto57: TLSchema = require('../../../schema/mtproto-57.json')\n\nconst apiConfig: ApiConfig = {\n  invokeWithLayer: 0xda9b0d0d,\n  layer          : 57,\n  initConnection : 0x69796de9,\n  api_id         : 49631,\n  device_model   : 'Unknown UserAgent',\n  system_version : 'Unknown Platform',\n  app_version    : '1.0.1',\n  lang_code      : 'en'\n}\n\nconst configNormalization = (config: ConfigType): StrictConfig => {\n  const {\n    server = {},\n    api = {},\n    app: {\n      storage = new MemoryStorage,\n      publicKeys = publisKeys,\n      plugins = [],\n    } = {},\n    schema = api57,\n    mtSchema = mtproto57,\n  } = config\n  const apiNormalized = { ...apiConfig, ...api }\n  const invokeLayer = generateInvokeLayer(apiNormalized.layer)\n  apiNormalized.invokeWithLayer = invokeLayer\n  const fullCfg = {\n    server,\n    api: apiNormalized,\n    app: { storage, publicKeys, plugins },\n    schema,\n    mtSchema\n  }\n  configValidator(fullCfg)\n  return fullCfg\n}\n\nexport default configNormalization\n"]}