{"version":3,"sources":["../../../src/service/main/init.js"],"names":["init","config","uid","fullConfig","dcMap","server","storage","app","layer","generateLayers","schema","mtSchema","api","mt","apiLayer","mtLayer"],"mappings":";;;;;QAUgBA,I,GAAAA,I;;AARhB;;;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,SAASA,IAAT,CAAcC,MAAd,EAAkC;AACvC;AACA,MAAMC,MAAW,qBAAjB;AACA,MAAMC,aAAa,mCAAoBF,MAApB,CAAnB;AACA,MAAMG,QAAQ,kBAAkBH,OAAOI,MAAzB,CAAd;AACA,MAAMC,UAAUH,WAAWI,GAAX,CAAeD,OAA/B;AACA,MAAME,QAAQC,eAAeN,WAAWO,MAA1B,EAAkCP,WAAWQ,QAA7C,CAAd;;AAEA,SAAO;AACLT,OADK;AAELC,cAFK;AAGLC,SAHK;AAILE,WAJK;AAKLE;AALK,GAAP;AAOD;;AAED,IAAMC,iBAAiB,CAACG,GAAD,EAAgBC,EAAhB,MAAkC;AACvDC,YAAU,qBAAWF,GAAX,CAD6C;AAEvDG,WAAU,qBAAWF,EAAX;AAF6C,CAAlC,CAAvB","file":"init.js","sourcesContent":["//@flow\n\nimport uuid from 'Util/uuid'\nimport { type UID } from 'Newtype'\nimport { type ConfigType } from './index.h'\nimport configNormalization from './config-normalization'\nimport parseServerConfig from '../../config-check/dc'\nimport { type TLSchema } from '../../tl/index.h'\nimport Layout from '../../layout'\n\nexport function init(config: ConfigType) {\n  //$off\n  const uid: UID = uuid()\n  const fullConfig = configNormalization(config)\n  const dcMap = parseServerConfig(config.server)\n  const storage = fullConfig.app.storage\n  const layer = generateLayers(fullConfig.schema, fullConfig.mtSchema)\n\n  return {\n    uid,\n    fullConfig,\n    dcMap,\n    storage,\n    layer,\n  }\n}\n\nconst generateLayers = (api: TLSchema, mt: TLSchema) => ({\n  apiLayer: new Layout(api),\n  mtLayer : new Layout(mt),\n})\n"]}