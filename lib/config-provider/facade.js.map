{"version":3,"sources":["../../src/config-provider/facade.js"],"names":["fromNullable","Config","halt","get","uid","dc","val","set","seq","newSeq","apiConfig","thread","storage","key","value","has","remove","keys","storageAdapter","authKey","getAuthKey","authID","getAuthID","salt","getSalt","getDC","nearestDC","getNearestDC","data","setAuthKey","setAuthID","setSalt","setDC","setNearestDC","removeAuthKey","removeAuthID","removeSalt","removeDC","removeNearestDC","fastCache","init","of","publicKeys","keyHex","keyManager","select","fingerprints","authRequest","req","session","Array","isArray","rootEmitter","emit","layer","apiLayer","mtLayer","schema","apiSchema","mtSchema","timerOffset","lastMessageID","dcMap","id","Error","dcList","common"],"mappings":"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","file":"facade.js","sourcesContent":["//@flow\n\n// import { Just, Nothing, fromNullable, Maybe } from 'folktale/maybe'\n\nimport { Maybe } from 'apropos'\nconst { fromNullable } = Maybe\n\nimport { type PublicKey } from '../service/main/index.h'\nimport { type DCNumber } from 'Newtype'\nimport getCrypto from '../co-worker'\nimport { getConfig } from './provider'\nimport random from '../service/secure-random'\nimport KeyManager from '../service/authorizer/rsa-keys-manger'\nimport NetworkerThread from '../service/networker'\nimport L1Cache from '../l1-cache'\n\nconst Config = {\n  halt: {\n    get(uid: string, dc: number): boolean {\n      const val = getConfig(uid).halt[dc]\n      if (typeof val !== 'boolean') {\n        Config.halt.set(uid, dc, false)\n        return false\n      }\n      return val\n    },\n    set(uid: string, dc: number, val: boolean) {\n      getConfig(uid).halt[dc] = val\n    }\n  },\n  // invoke(method: string, params: Object = {}, opts: Object = {}) {\n  //\n  // },\n  seq: {\n    get(uid: string, dc: number) {\n      const seq = getConfig(uid).seq[dc]\n      if (typeof seq !== 'number') {\n        Config.seq.set(uid, dc, 1)\n        return 1\n      }\n      return seq\n    },\n    set(uid: string, dc: number, newSeq: number) {\n      getConfig(uid).seq[dc] = newSeq\n    }\n  },\n  apiConfig: {\n    get(uid: string) {\n      return getConfig(uid).apiConfig\n    }\n  },\n  thread: {\n    set(uid: string, dc: DCNumber, thread: NetworkerThread) {\n      getConfig(uid).thread[dc] = thread\n    },\n    get(uid: string, dc: DCNumber) {\n      return fromNullable(getConfig(uid).thread[dc])\n    },\n  },\n  storage: {\n    get(uid: string, key: string): Promise<mixed> {\n      return getConfig(uid).storage.get(key)\n    },\n    set(uid: string, key: string, value: any): Promise<void> {\n      return getConfig(uid).storage.set(key, value)\n    },\n    has(uid: string, key: string): Promise<boolean> {\n      return getConfig(uid).storage.has(key)\n    },\n    remove(uid: string, ...keys: string[]): Promise<void> {\n      return getConfig(uid).storage.remove(...keys)\n    },\n  },\n  storageAdapter: {\n    get: {\n      authKey(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.getAuthKey(dc)\n      },\n      authID(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.getAuthID(dc)\n      },\n      salt(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.getSalt(dc)\n      },\n      dc(uid: string) {\n        return getConfig(uid).storageAdapter.getDC()\n      },\n      nearestDC(uid: string) {\n        return getConfig(uid).storageAdapter.getNearestDC()\n      },\n    },\n    set: {\n      authKey(uid: string, dc: number, data: number[]) {\n        return getConfig(uid).storageAdapter.setAuthKey(dc, data)\n      },\n      authID(uid: string, dc: number, data: number[]) {\n        return getConfig(uid).storageAdapter.setAuthID(dc, data)\n      },\n      salt(uid: string, dc: number, data: number[]) {\n        return getConfig(uid).storageAdapter.setSalt(dc, data)\n      },\n      dc(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.setDC(dc)\n      },\n      nearestDC(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.setNearestDC(dc)\n      },\n    },\n    remove: {\n      authKey(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.removeAuthKey(dc)\n      },\n      authID(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.removeAuthID(dc)\n      },\n      salt(uid: string, dc: number) {\n        return getConfig(uid).storageAdapter.removeSalt(dc)\n      },\n      dc(uid: string) {\n        return getConfig(uid).storageAdapter.removeDC()\n      },\n      nearestDC(uid: string) {\n        return getConfig(uid).storageAdapter.removeNearestDC()\n      },\n    },\n  },\n  fastCache: {\n    get(uid: string, dc: DCNumber) {\n      return getConfig(uid).fastCache[dc | 0]\n    },\n    init(uid: string, dc: DCNumber) {\n      getConfig(uid).fastCache[dc | 0] = L1Cache.of()\n    }\n  },\n  publicKeys: {\n    get(uid: string, keyHex: string): PublicKey | false {\n      return getConfig(uid).publicKeys[keyHex] || false\n    },\n    set(uid: string, keyHex: string, key: PublicKey) {\n      getConfig(uid).publicKeys[keyHex] = key\n    },\n    init(uid: string, keys: PublicKey[]) {\n      getConfig(uid).keyManager = KeyManager(uid, keys, Config.publicKeys)\n    },\n    select(uid: string, fingerprints: string[]) {\n      return getConfig(uid).keyManager(fingerprints)\n    },\n  },\n  authRequest: {\n    get(uid: string, dc: number) {\n      return getConfig(uid).authRequest[dc]\n    },\n    set(uid: string, dc: number, req: *) {\n      getConfig(uid).authRequest[dc] = req\n    },\n    remove(uid: string, dc: number) {\n      delete getConfig(uid).authRequest[dc]\n    },\n  },\n  session: {\n    get(uid: string, dc: number) {\n      let session = getConfig(uid).session[dc]\n      if (!Array.isArray(session)) {\n        session = new Array(8)\n        random(session)\n        Config.session.set(uid, dc, session)\n      }\n      return session\n    },\n    set(uid: string, dc: number, session: number[]) {\n      getConfig(uid).session[dc] = session\n    }\n  },\n  rootEmitter: (uid: string) => getConfig(uid).rootEmitter,\n  emit       : (uid: string) => getConfig(uid).emit,\n  layer      : {\n    apiLayer: (uid: string) => getConfig(uid).layer.apiLayer,\n    mtLayer : (uid: string) => getConfig(uid).layer.mtLayer,\n  },\n  schema: {\n    get      : (uid: string) => getConfig(uid).schema,\n    apiSchema: (uid: string) => getConfig(uid).schema.apiSchema,\n    mtSchema : (uid: string) => getConfig(uid).schema.mtSchema,\n  },\n  timerOffset: {\n    get: (uid: string) => getConfig(uid).timerOffset,\n    set(uid: string, value: number) {\n      getConfig(uid).timerOffset = value\n    }\n  },\n  lastMessageID: {\n    get: (uid: string) => getConfig(uid).lastMessageID,\n    set(uid: string, value: [number, number]) {\n      getConfig(uid).lastMessageID = value\n    }\n  },\n  dcMap(uid: string, id: DCNumber) {\n    const dc = getConfig(uid).dcMap.get(id)\n    if (typeof dc !== 'string')\n      throw new Error(`Wrong dc id! ${id}`)\n    return dc\n  },\n  dcList(uid: string) {\n    return [...getConfig(uid).dcMap.keys()]\n  },\n  common: getCrypto()\n}\n\nexport default Config\n"]}