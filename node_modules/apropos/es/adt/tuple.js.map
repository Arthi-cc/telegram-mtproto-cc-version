{"version":3,"sources":["../../src/adt/tuple.js"],"names":["Base","failSafeStringify","addInterop","Tupleʹ","constructor","a","b","fst","snd","bimap","f","g","map","curry","uncurry","extend","extract","foldl","z","foldr","foldMap","equals","tuple","toValue","toJSON","toString","additionalProps","length","value","Object","defineProperties","prototype","of"],"mappings":";;AAEA;;AAEA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAA2B,YAA3B;AACA,SAASC,iBAAT,EAA4BC,UAA5B,QAA8C,SAA9C;;AAIA,MAAMC,MAAN,SAA2BH,IAA3B,CAAuD;AAErDI,cAAYC,CAAZ,EAAkBC,CAAlB,EAAqC;AACnC;AACA,SAAK,aAAL,CAAmB,CAAnB,IAAwBD,CAAxB;AACA,SAAK,aAAL,CAAmB,CAAnB,IAAwBC,CAAxB;AACA;AACD;AACDC,QAAS;AACP,WAAQ,KAAK,aAAL,CAAmB,CAAnB,CAAR;AACD;AACDC,QAAS;AACP,WAAQ,KAAK,aAAL,CAAmB,CAAnB,CAAR;AACD;AACDC,QAAcC,CAAd,EAA+BC,CAA/B,EAA+D;AAC7D,WAAO,IAAIR,MAAJ,CAAWO,EAAE,KAAKH,GAAL,EAAF,CAAX,EAA0BI,EAAE,KAAKH,GAAL,EAAF,CAA1B,CAAP;AACD;AACDI,MAAQF,CAAR,EAAuC;AACrC,WAAO,IAAIP,MAAJ,CAAW,KAAKI,GAAL,EAAX,EAAuBG,EAAE,KAAKF,GAAL,EAAF,CAAvB,CAAP;AACD;AACDK,QAASH,CAAT,EAAsC;AACpC,WAAOA,EAAE,IAAF,CAAP;AACD;AACDI,UAAWJ,CAAX,EAAoC;AAClC,WAAOA,EAAE,KAAKH,GAAL,EAAF,EAAc,KAAKC,GAAL,EAAd,CAAP;AACD;AACDO,SAAUL,CAAV,EAAiD;AAC/C,WAAO,IAAIP,MAAJ,CAAW,KAAKI,GAAL,EAAX,EAAuBG,EAAE,IAAF,CAAvB,CAAP;AACD;AACDM,YAAa;AACX,WAAO,KAAKR,GAAL,EAAP;AACD;AACDS,QAAYP,CAAZ,EAAkCQ,CAAlC,EAA2C;AACzC,WAAOR,EAAE,KAAKF,GAAL,EAAF,EAAcU,CAAd,CAAP;AACD;AACDC,QAAYT,CAAZ,EAAkCQ,CAAlC,EAA2C;AACzC,WAAOR,EAAEQ,CAAF,EAAK,KAAKV,GAAL,EAAL,CAAP;AACD;AACDY,UAAWV,CAAX,EAA8B;AAC5B,WAAOA,EAAE,KAAKF,GAAL,EAAF,CAAP;AACD;AACDa,SAAeC,KAAf,EAA8C;AAC5C,QAAIA,iBAAiBnB,MAArB,EAA6B;AAC3B,aACE,KAAKI,GAAL,OAAee,MAAMf,GAAN,EAAf,IACG,KAAKC,GAAL,OAAec,MAAMd,GAAN,EAFpB;AAID;AACD,WAAO,KAAP;AACA;AACA;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACAe,YAAU;AACR,WAAO,CAAC,KAAKhB,GAAL,EAAD,EAAa,KAAKC,GAAL,EAAb,CAAP;AACD;AACDgB,WAAS;AACP,WAAO,KAAKD,OAAL,EAAP;AACD;AACDE,aAAW;AACT,WAAQ,UAASxB,kBAAkB,KAAKM,GAAL,EAAlB,CAA8B,KAAIN,kBAAkB,KAAKO,GAAL,EAAlB,CAA8B,IAAjF;AACD;AACD;AACA;AACA;AArEqD;;AAwEvDN,WAAWC,MAAX,EAAmB,OAAnB;;AAEA;;;;AAIA,IAAMuB,kBAAkB;AACtBC,UAAQ;AACNC,WAAO;AADD;AADc,CAAxB;;AAMAC,OAAOC,gBAAP,CAAwB3B,OAAO4B,SAA/B,EAA0CL,eAA1C;;AAEA,OAAO,SAASM,EAAT,CAAkB3B,CAAlB,EAAwBC,CAAxB,EAA2C;AAChD,SAAO,IAAIH,MAAJ,CAAWE,CAAX,EAAcC,CAAd,CAAP;AACD;;AAED,OAAO,SAASC,GAAT,CAAmBe,KAAnB,EAA0C;AAC/C,SAAOA,MAAMf,GAAN,EAAP;AACD;;AAED,OAAO,SAASC,GAAT,CAAmBc,KAAnB,EAA0C;AAC/C,SAAOA,MAAMd,GAAN,EAAP;AACD","file":"tuple.js","sourcesContent":["//@flow\n\n/* eslint-disable no-whitespace-before-property */\n\nimport Base from '../base'\nimport { type Tuple } from '../index.h'\nimport { failSafeStringify, addInterop } from '../util'\n\nexport type { Tuple }\n\nclass Tupleʹ<A, B> extends Base implements Tuple<A, B> {\n  length: number\n  constructor(a: A, b: B): Tuple<A, B> {\n    super()\n    this /*::; noop */[0] = a\n    this /*::; noop */[1] = b\n    /*:: return this */\n  }\n  fst(): A {\n    return (this /*::, noop */[0])\n  }\n  snd(): B {\n    return (this /*::, noop */[1])\n  }\n  bimap<Aʹ, Bʹ>(f: (a: A) => Aʹ, g: (b: B) => Bʹ): Tuple<Aʹ, Bʹ> {\n    return new Tupleʹ(f(this.fst()), g(this.snd()))\n  }\n  map<Bʹ>(f: (b: B) => Bʹ): Tuple<A, Bʹ> {\n    return new Tupleʹ(this.fst(), f(this.snd()))\n  }\n  curry<X>(f: (x: Tuple<A, B>) => X): X {\n    return f(this)\n  }\n  uncurry<X>(f: (a: A, b: B) => X): X {\n    return f(this.fst(), this.snd())\n  }\n  extend<N>(f: (x: Tuple<A, B>) => N): Tuple<A, N> {\n    return new Tupleʹ(this.fst(), f(this))\n  }\n  extract(): B {\n    return this.snd()\n  }\n  foldl<X, Z>(f: (b: B, z: Z) => X, z: Z): X {\n    return f(this.snd(), z)\n  }\n  foldr<X, Z>(f: (z: Z, b: B) => X, z: Z): X {\n    return f(z, this.snd())\n  }\n  foldMap<X>(f: (b: B) => X): X {\n    return f(this.snd())\n  }\n  equals<Aʹ, Bʹ>(tuple: Tuple<Aʹ, Bʹ>): boolean {\n    if (tuple instanceof Tupleʹ) {\n      return (\n        this.fst() === tuple.fst()\n        && this.snd() === tuple.snd()\n      )\n    }\n    return false\n    // this.eqFirst(tuple)\n    //   && this.eqSecond(tuple)\n  }\n  // eqFirst<Aʹ, -Bʹ>(tuple: Tuple<Aʹ, Bʹ>): boolean {\n  //   return eq(this.fst(), tuple.fst())\n  // }\n  // eqSecond<-Aʹ, Bʹ>(tuple: Tuple<Aʹ, Bʹ>): boolean {\n  //   return eq(this.snd(), tuple.snd())\n  // }\n  toValue() {\n    return [this.fst(), this.snd()]\n  }\n  toJSON() {\n    return this.toValue()\n  }\n  toString() {\n    return `Tuple( ${failSafeStringify(this.fst())}, ${failSafeStringify(this.snd())} )`\n  }\n  // static of<Aʹ, Bʹ>(a: Aʹ, b: Bʹ): Tuple<Aʹ, Bʹ> {\n  //   return new Tupleʹ(a, b)\n  // }\n}\n\naddInterop(Tupleʹ, 'Tuple')\n\n/*::\nconst noop = {}\n*/\n\nconst additionalProps = {\n  length: {\n    value: 2\n  },\n}\n\nObject.defineProperties(Tupleʹ.prototype, additionalProps)\n\nexport function of<A, B>(a: A, b: B): Tuple<A, B> {\n  return new Tupleʹ(a, b)\n}\n\nexport function fst<A, B>(tuple: Tuple<A, B>): A {\n  return tuple.fst()\n}\n\nexport function snd<A, B>(tuple: Tuple<A, B>): B {\n  return tuple.snd()\n}\n"]}