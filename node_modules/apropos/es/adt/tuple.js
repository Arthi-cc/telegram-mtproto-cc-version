

/* eslint-disable no-whitespace-before-property */

import Base from '../base';
import '../index.h';
import { failSafeStringify, addInterop } from '../util';

class Tupleʹ extends Base {
  constructor(a, b) {
    super();
    this /*::; noop */[0] = a;
    this /*::; noop */[1] = b;
    /*:: return this */
  }
  fst() {
    return this /*::, noop */[0];
  }
  snd() {
    return this /*::, noop */[1];
  }
  bimap(f, g) {
    return new Tupleʹ(f(this.fst()), g(this.snd()));
  }
  map(f) {
    return new Tupleʹ(this.fst(), f(this.snd()));
  }
  curry(f) {
    return f(this);
  }
  uncurry(f) {
    return f(this.fst(), this.snd());
  }
  extend(f) {
    return new Tupleʹ(this.fst(), f(this));
  }
  extract() {
    return this.snd();
  }
  foldl(f, z) {
    return f(this.snd(), z);
  }
  foldr(f, z) {
    return f(z, this.snd());
  }
  foldMap(f) {
    return f(this.snd());
  }
  equals(tuple) {
    if (tuple instanceof Tupleʹ) {
      return this.fst() === tuple.fst() && this.snd() === tuple.snd();
    }
    return false;
    // this.eqFirst(tuple)
    //   && this.eqSecond(tuple)
  }
  // eqFirst<Aʹ, -Bʹ>(tuple: Tuple<Aʹ, Bʹ>): boolean {
  //   return eq(this.fst(), tuple.fst())
  // }
  // eqSecond<-Aʹ, Bʹ>(tuple: Tuple<Aʹ, Bʹ>): boolean {
  //   return eq(this.snd(), tuple.snd())
  // }
  toValue() {
    return [this.fst(), this.snd()];
  }
  toJSON() {
    return this.toValue();
  }
  toString() {
    return `Tuple( ${failSafeStringify(this.fst())}, ${failSafeStringify(this.snd())} )`;
  }
  // static of<Aʹ, Bʹ>(a: Aʹ, b: Bʹ): Tuple<Aʹ, Bʹ> {
  //   return new Tupleʹ(a, b)
  // }
}

addInterop(Tupleʹ, 'Tuple');

/*::
const noop = {}
*/

var additionalProps = {
  length: {
    value: 2
  }
};

Object.defineProperties(Tupleʹ.prototype, additionalProps);

export function of(a, b) {
  return new Tupleʹ(a, b);
}

export function fst(tuple) {
  return tuple.fst();
}

export function snd(tuple) {
  return tuple.snd();
}
//# sourceMappingURL=tuple.js.map