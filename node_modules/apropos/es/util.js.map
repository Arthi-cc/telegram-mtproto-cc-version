{"version":3,"sources":["../src/util.js"],"names":["failSafeStringify","value","JSON","stringify","error","String","sanctuaryType","version","versionRounding","length","splitted","split","major","minor","getType","objectName","join","addSanctuaryType","name","proto","Object","defineProperty","fantasyLandMethods","map","checkAddFL","typeName","fullName","klass","classStatic","fn","enumerable","writable","configurable","prototype","addInterop","forEach","names"],"mappings":"AAEA,OAAO,SAASA,iBAAT,CAA2BC,KAA3B,EAA+C;AACpD,MAAI;AACF,WAAOC,KAAKC,SAAL,CAAeF,KAAf,CAAP;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,WAAOC,OAAOJ,KAAP,CAAP;AACD;AACF;;AAED,IAAMK,gBAAgB,CAAC,MAAM;AAiB3B,MAAMC,UATN,SAASC,eAAT,CAAyBD,OAAzB,EAAkD;AAChD,QAAIA,QAAQE,MAAR,GAAiB,CAArB,EAAwB,OAAOF,OAAP;AACxB,QAAMG,WAAWH,QAAQI,KAAR,CAAc,IAAd,CAAjB;AACA,QAAMC,QAAQF,SAAS,CAAT,KAAe,EAA7B;AACA,QAAMG,QAAQH,SAAS,CAAT,KAAe,EAA7B;AACA,WAAOE,UAAU,GAAV,GACF,KAAIC,KAAM,EADR,GAEHD,KAFJ;AAGD,GACe,CA3BV,OA2BU,CAAhB;;AAEA,SAAO,SAASE,OAAT,CAAiBC,UAAjB,EAA6C;AAClD,WAAO,CA9BH,SA8BG,EAAc,GAAd,EAAmBA,UAAnB,EAA+B,GAA/B,EAAoCR,OAApC,EAA6CS,IAA7C,CAAkD,EAAlD,CAAP;AACD,GAFD;AAGD,CAtBqB,GAAtB;;AAwBA,SAASC,gBAAT,CAA0BC,IAA1B,EAAwCC,KAAxC,EAAuD;AACrDC,SAAOC,cAAP,EAAsB,QAAQF,KAA9B,CAAmC,YAAnC,EAAiD,QAAjD,EAA2D;AACzDlB,WAAOK,cAAcY,IAAd;AADkD,GAA3D;AAGD;;AAED,IAAMI,qBAAqB,CACzB,KADyB,EAEzB,OAFyB,EAGzB,QAHyB,EAIzB,IAJyB,EAKzB,IALyB,EAMzBC,GANyB,CAMrBL,QAAQ,CAACA,IAAD,EAAQ,gBAAeA,IAAK,EAA5B,CANa,CAA3B;;AAQA,SAASM,UAAT,CAAoB,CAACC,QAAD,EAAWC,QAAX,CAApB,EAA0CC,KAA1C,EAAiD;AAC/C,MAAMC,cAAc,QAAQD,KAA5B,CAD+C,CACd;AACjC,MAAI,OAAOC,YAAYH,QAAZ,CAAP,KAAiC,UAArC,EAAiD;AAC/C,QAAMI,KAAKD,YAAYH,QAAZ,CAAX;AACAL,WAAOC,cAAP,EAAsB,QAAQM,KAA9B,CAAmC,YAAnC,EAAiDD,QAAjD,EAA2D;AACzDzB,aAAc4B,EAD2C;AAEzDC,kBAAc,KAF2C;AAGzDC,gBAAc,IAH2C;AAIzDC,oBAAc;AAJ2C,KAA3D;AAMD;AACD,MAAMb,QAAQ,QAAQQ,MAAMM,SAA5B,CAX+C,CAWV;AACrC,MAAId,SAAS,IAAT,IAAiB,OAAOA,MAAMM,QAAN,CAAP,KAA2B,UAAhD,EAA4D;AAC1D,QAAMI,MAAKV,MAAMM,QAAN,CAAX;AACAL,WAAOC,cAAP,EAAsB,QAAQF,KAA9B,CAAmC,YAAnC,EAAiDO,QAAjD,EAA2D;AACzDzB,aAAc4B,GAD2C;AAEzDC,kBAAc,KAF2C;AAGzDC,gBAAc,IAH2C;AAIzDC,oBAAc;AAJ2C,KAA3D;AAMD;AACF;;AAED,OAAO,SAASE,UAAT,CAAuBP,KAAvB,EAAwCT,IAAxC,EAAsD;AAC3DD,mBAAiBC,IAAjB,EAAuBS,KAAvB;AACAL,qBAAmBa,OAAnB,CAA2BC,SAASZ,WAAWY,KAAX,EAAkBT,KAAlB,CAApC;AACD","file":"util.js","sourcesContent":["//@flow\n\nexport function failSafeStringify(value: any): string {\n  try {\n    return JSON.stringify(value)\n  } catch (error) {\n    return String(value)\n  }\n}\n\nconst sanctuaryType = (() => {\n  const packageVersion: string = preval`\n    module.exports = require('../package.json').version || ''\n  `\n\n  const packageName: string = preval`\n    module.exports = require('../package.json').name || ''\n  `\n  function versionRounding(version: string): string {\n    if (version.length < 2) return version\n    const splitted = version.split(/\\./)\n    const major = splitted[0] || ''\n    const minor = splitted[1] || ''\n    return major === '0'\n      ? `0.${minor}`\n      : major\n  }\n  const version = versionRounding(packageVersion)\n\n  return function getType(objectName: string): string {\n    return [packageName, '/', objectName, '@', version].join('')\n  }\n})()\n\nfunction addSanctuaryType(name: string, proto: Object) {\n  Object.defineProperty(/*::( */proto/*::, {}) */, '@@type', {\n    value: sanctuaryType(name)\n  })\n}\n\nconst fantasyLandMethods = [\n  'map',\n  'chain',\n  'equals',\n  'ap',\n  'of',\n].map(name => [name, `fantasy-land/${name}`])\n\nfunction checkAddFL([typeName, fullName], klass) {\n  const classStatic = /*::( */klass/*::, {}) */\n  if (typeof classStatic[typeName] === 'function') {\n    const fn = classStatic[typeName]\n    Object.defineProperty(/*::( */klass/*::, {}) */, fullName, {\n      value       : fn,\n      enumerable  : false,\n      writable    : true,\n      configurable: true,\n    })\n  }\n  const proto = /*::( */klass.prototype/*::, {}) */\n  if (proto != null && typeof proto[typeName] === 'function') {\n    const fn = proto[typeName]\n    Object.defineProperty(/*::( */proto/*::, {}) */, fullName, {\n      value       : fn,\n      enumerable  : false,\n      writable    : true,\n      configurable: true,\n    })\n  }\n}\n\nexport function addInterop<T>(klass: Class<T>, name: string) {\n  addSanctuaryType(name, klass)\n  fantasyLandMethods.forEach(names => checkAddFL(names, klass))\n}\n"]}