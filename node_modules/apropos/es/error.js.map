{"version":3,"sources":["../src/error.js"],"names":["ExtendableError","AnnotatedError","constructor","context","tag","data","makeError"],"mappings":"AAEA,OAAOA,eAAP,MAA4B,eAA5B;;AAOA,MAAMC,cAAN,SAAkDD,eAAlD,CAAuG;AAGrGE,cAAYC,OAAZ,EAA8BC,GAA9B,EAAwC;AACtC,UAAMA,GAAN;AACA,SAAKA,GAAL,GAAWA,GAAX;AACA,SAAKC,IAAL,GAAYF,OAAZ;AACD;AAPoG;;AAavG;;;;;;;;;AASA,OAAO,IAAMG,YAAmBF,GAAP,IAAoCC,QAAQ,IAAIJ,cAAJ,CAAmBI,IAAnB,EAAyBD,GAAzB,CAA9D","file":"error.js","sourcesContent":["//@flow\n\nimport ExtendableError from './error-proto'\n\nexport interface TaggedError<-Tag = '', -Context = mixed> {\n  -tag: Tag,\n  -data: Context,\n}\n\nclass AnnotatedError<-Context, -Tag = ''> extends ExtendableError implements TaggedError<Tag, Context> {\n  -tag: Tag\n  -data: Context\n  constructor(context: Context, tag: Tag) {\n    super(tag)\n    this.tag = tag\n    this.data = context\n  }\n}\n\nexport type MakeError<-Tag = ''> = <-Context>(data: Context) => TaggedError<Tag, Context>\n\n\n/**\n * Create fabric for generating tagged error constructors\n *\n * Useful in `.mapL`\n *\n * @function makeError\n * @template Tag\n * @param {(Tag|String)} tag\n */\nexport const makeError = <-Tag>(tag: Tag): MakeError<Tag> => data => new AnnotatedError(data, tag)\n"]}